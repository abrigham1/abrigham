# setting to generic cause we're using docker so we don't
# need them to install anything for us
language: generic
# need docker added since everything is based off it
services:
  - docker
# add hosts entries for abrigham and mlapi.abrigham (need these for laravel dusk tests)
addons:
  hosts:
    - abrigham.test
    - mlapi.abrigham.test
# don't install submodules we're doing it manually since it wasn't working correctly
git:
  submodules: false
# install our laradock submodule
before_install:
  - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
  - git submodule update --init --recursive
# install all our dependencies
install:
  - bash first_install.sh
  - cp -f .env.travis .env
  - chmod -R 777 storage
  - cd laradock
  - docker-compose up --build -d workspace nginx selenium php-fpm anaconda
  - docker-compose ps
  - docker-compose exec workspace bash -c "composer install --no-suggest --no-interaction --prefer-dist"
  - docker-compose exec workspace bash -c "php artisan key:generate --ansi"
  - docker-compose exec workspace bash -c "npm install --unsafe-perm"
  - docker-compose exec workspace bash -c "npm run dev"
# run phpunit, mocha, and phpcs
script:
  - docker-compose exec workspace bash -c "vendor/bin/phpunit --coverage-clover build/logs/clover.xml"
# dusk must run before npm run test because it re-compiles webpack
# (or we could run npm run dev again between npm run test and php artisan dusk)
  - docker-compose exec workspace bash -c "php artisan dusk"
  - docker-compose exec workspace bash -c "npm run test"
  - docker-compose exec workspace bash -c "vendor/bin/phpcs --standard=PSR12 ./app/Http"
# upload coverage report to coveralls.io
after_success:
  - docker-compose run -e TRAVIS -e TRAVIS_JOB_ID workspace bash -c "vendor/bin/php-coveralls -v"
# upload our tested docker images to amazon ECR and prepare app for production deployment
before_deploy:
# install aws cli
  - pip install awscli --upgrade --user
# tag our docker images
  - docker tag laradock_nginx:latest 620139381534.dkr.ecr.us-east-1.amazonaws.com/abrigham/nginx:latest
  - docker tag laradock_php-fpm:latest 620139381534.dkr.ecr.us-east-1.amazonaws.com/abrigham/php-fpm:latest
  - docker tag laradock_anaconda:latest 620139381534.dkr.ecr.us-east-1.amazonaws.com/abrigham/anaconda:latest
# AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY env vars must be set!
  - eval $(aws ecr get-login --no-include-email --region us-east-1)
# push docker images out
  - docker push 620139381534.dkr.ecr.us-east-1.amazonaws.com/abrigham/nginx:latest
  - docker push 620139381534.dkr.ecr.us-east-1.amazonaws.com/abrigham/php-fpm:latest
  - docker push 620139381534.dkr.ecr.us-east-1.amazonaws.com/abrigham/anaconda:latest
# prepare app for production deploy
  - docker-compose exec workspace bash -c "composer install --no-dev --optimize-autoloader --no-interaction --no-suggest --prefer-dist"
  - docker-compose exec workspace bash -c "npm install --unsafe-perm"
  - docker-compose exec workspace bash -c "npm run prod"
  - docker-compose exec workspace bash -c "php artisan clear-compiled"
  - docker-compose exec workspace bash -c "php artisan route:clear"
  - docker-compose exec workspace bash -c "php artisan cache:clear"
  - docker-compose exec workspace bash -c "php artisan view:clear"
  - docker-compose exec workspace bash -c "php artisan route:cache"
# extremely hacky solution because travis doesn't support .ebignore
# https://github.com/travis-ci/dpl/issues/411#issuecomment-308270139
  - cd ../
  - git config user.email "abrigham1@gmail.com"
  - git config user.name "Aaron Brigham"
# laradock submodule also needs to be added so lets remove it as a submodule first
  - git rm --cached laradock
  - git rm .gitmodules
  - rm -rf laradock/.git
# force add and commit so they will all be picked up for the deploy
  - git add --force laradock vendor node_modules public/mix-manifest.json
  - git commit -nm "add laradock/vendor/node_modules/etc so they will be deployed"
# deploy via elastic beanstalk
deploy:
  provider: elasticbeanstalk
  skip_cleanup: true
  access_key_id:
    secure: "daENgtcqDGvGuAzMhCi6OGInbfFgDJSLicEn2GFxcE98Mm09wN3x5mHtKFNAxLvZOQzG64h3FnZrTJ6VfRBkn332xivJR8zGH85lFwoVQ8qdRDjgcpaEDgiPSyNgiZgYRQdP64CJK/4NoSwEASCeht+OZcrc0OFLo7go6yP168FOc7W9s+xiHn6Kne1iLW5GxRiPgMDFq7+2b/D4xRdm3k2evtP1ZxSUFtNNTSCRu40bs0uj8rucniCfql7zSDnfYEv5n6cH+YuJRi+zPAuaJPT/TfWMCB55/mnSmlq+cx+vxZkzS73uqA8n62kih3oLOxzAdKnodr1gUMEJ8/87ziNmSvjZraA/tCkU6VT6rwed5ZW+2EnNGZ/IN4HI2dAcOEhz00L1jQk3EpTGnvKM+mEA9D68bYFHPBMZixAyz6PC2Ow5jR8F08xw8ffxOL3dIjzuNULyy0BwXvRlkEK8hUs7bghNAlWEck6xEoNqBasOXEPAsh4XBC8KPmQXPsceuZHhQPT/hiR9hvuG6qqvMPUgMJGnUWzdh39kwZtCq3jONvRNG4escyfA7KdyDb8J28Eci9DbsyHGttq9aweGNnW5ZWwRdQqqkYK3aCxQqU7+e4McS+SDnbXkXRk3J7+v6+AUqsIfI8QF3Cxplw8Z0kQESXvCPy/e8ygw7k3o9Ms="
  secret_access_key:
    secure: "hLNLWa54KrQxJ+A90y4VNxU8WwHJsef4epxmFZQ7RD3hYXPlH2aRSplBg+BUZ4kF5kwc5iqZ+v+ux2USxRMc9fhmuNmCCRfSF2d8xmJo5qBORTbVw07ndJOJ6fjsXxnA7+CiSjXWGjj9BtVJJ0DLxrixL55AUm/HGNzGKHPGXVAmhoR//vq7ggl3vUC00rQIThc4KZijupv0ywLG02bMkdUD5dY5L6ViDd2pp2yF+5iz81ICzMOdAseFoN7Ue6QR7mjY0eqS1QBR9z1gtHNH04yeTItVu6FSIuKZEEo5lz+/CWWE12Eo5ijpdra9YGAZlyZP/hpoA6ZWezSrbdGwwapK0hM8TxSFVyUrks2JbzHBGekaoPk3RI4pQqfyike4PDKZj96eValYssyyvnkhzm0Mc2JFlRo3i+2ViCmjFTG/RUi6ccfOUmWKI6d3KPeXApzH96MQnuABw4dV1La78f6aqpvNiUT8YQ4lXgOl0n91tdyFAjoZkaDtBmTdFvGFSjZtI0LT6FEJkuRdzK9ncobhz5GLrszBWiFwagPpUPNoIgfU3UmCMBsTd8Dnw0OOWbpLh7V4quM6udxbkcvWnTSTENCmChfxpmI+6K5hjP7jGe8TE6oUqWvTvFo/pF6KNQbdJ38tmU1yfRWP/BhmkN7+Bpi0hEMSg05wubFV3J8="
  region: us-east-1
  app: abrigham
  env: abrigham-prod
  bucket_name: elasticbeanstalk-us-east-1-620139381534
  bucker_path: abrigham
  on:
    branch: master
    repo: abrigham1/abrigham
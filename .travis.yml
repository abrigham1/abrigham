# setting to generic cause we're using docker so we don't
# need them to install anything for us
language: generic
# need docker added since everything is based off it
services:
  - docker
# add hosts entries for abrigham and mlapi.abrigham (need these for laravel dusk tests)
addons:
  hosts:
    - abrigham.test
    - mlapi.abrigham.test
# don't install submodules we're doing it manually since it wasn't working correctly
git:
  submodules: false
# install our laradock submodule
before_install:
  - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
  - git submodule update --init --recursive
# install all our dependencies
install:
  - bash first_install.sh
  - cp -f .env.travis .env
  - chmod -R 777 storage
  - cd laradock
  - docker-compose up --build -d workspace nginx selenium php-fpm anaconda
  - docker-compose ps
  - docker-compose exec workspace bash -c "composer install --no-suggest --no-interaction --prefer-dist"
  - docker-compose exec workspace bash -c "php artisan key:generate --ansi"
  - docker-compose exec workspace bash -c "npm install --unsafe-perm"
  - docker-compose exec workspace bash -c "npm run dev"
# run phpunit, mocha, and phpcs
script:
  - docker-compose exec workspace bash -c "vendor/bin/phpunit --coverage-clover build/logs/clover.xml"
# dusk must run before npm run test because it re-compiles webpack
# (or we could run npm run dev again between npm run test and php artisan dusk)
  - docker-compose exec workspace bash -c "php artisan dusk"
  - docker-compose exec workspace bash -c "npm run test"
  - docker-compose exec workspace bash -c "vendor/bin/phpcs --standard=PSR12 ./app/Http"
# upload coverage report to coveralls.io
after_success:
  - docker-compose run -e TRAVIS -e TRAVIS_JOB_ID workspace bash -c "vendor/bin/php-coveralls -v"
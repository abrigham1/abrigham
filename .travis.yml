language: php
php: 7.2
env: TRAVIS_NODE_VERSION="7.9.0"
# install anaconda, since feature tests are being run it is required
install:
  - ./after.sh
  - rm -rf ~/.nvm && git clone https://github.com/creationix/nvm.git ~/.nvm && (cd ~/.nvm && git checkout `git describe --abbrev=0 --tags`) && source ~/.nvm/nvm.sh && nvm install $TRAVIS_NODE_VERSION
# set up our testing environment
before_script:
  - cp .env.travis .env
  - composer self-update
  - composer install --prefer-source --no-interaction
  - php artisan key:generate
  - npm install
  - npm run prod
# run the tests and phpcs
script:
  - vendor/bin/phpunit;
  - vendor/bin/phpcs --standard=psr2 ./app/Http;
# no emails please
notifications:
  email: false
jobs:
  include:
    - stage: Test
    # using travis build stages, deploy will only run if all jobs in the test stage have passed
    - stage: Deploy
      php: 7.2
      # we're using this to install a newer version of node and npm so we can compile our assets before we deploy them
      env: TRAVIS_NODE_VERSION="7.9.0"
      # install nvm so we can update our node/npm version
      install:
        - rm -rf ~/.nvm && git clone https://github.com/creationix/nvm.git ~/.nvm && (cd ~/.nvm && git checkout `git describe --abbrev=0 --tags`) && source ~/.nvm/nvm.sh && nvm install $TRAVIS_NODE_VERSION
      before_script: skip
      script: skip
      before_deploy:
        # install production vendors
        - composer install --no-dev --optimize-autoloader --no-interaction
        # install our node dependencies
        - npm install
        # run production assets
        - npm run prod
        # zip up our application in preparation for sending it to s3
        - zip -r latest *
        - mkdir -p cd_upload
        - mv latest.zip cd_upload/latest.zip
      deploy:
        # deploy to s3
        - provider: s3
          skip_cleanup: true
          access_key_id: AKIAJHWIY4TFZ7L3UVRQ
          secret_access_key: &1
            secure: "QoghsnNb49yyiUYSDfLEmvYcqDB8ymaisPKM/q5wmuytlBYG63AUy2ild8fH1zGtZqs4+5EVYVNYK0bj1JCmOU1IoWjK7vx6kX/Zg2CkTZln5OV/b4CrN++0C068+w7bpDlbPVhG9qvEVlfCsgdPlmc6G8305uWxCjfTiBkOXWGXpA4f0+edlPZ9HPh/GhGtk/jt9sEQ9A3LblTj1vqmPZJNMcnHsAWIsNEcqExb+VS5OVedFfKeXrWJ1ia+POzsDe82pESx/lOOxNA9j6NprOm7B7MDjl4ER3R0b3J7wmGYoARrEJLrrvsTeWop9kbEBOfgvhhUhWXo5M8iLj/MBdT7f1pRNLrCQmY3pgeQeRIsnaKkUZDo29/nATMvZ7ooqi5dNvADXrrLnmqDdUbR+WP2hgH68FL5uBB58XC194p02fsKhWOMhR1hzGAB7/5om/20MHm/Vf4a4PR+inKQ1D/U2sj5299RKKCDvKPSxD3Uq6PCBgMmQuoiQdPxAmIyYwjmgUwgjKcG51Je/z7xTeO53vBs4xFXXCXNbz+SQuWONfNPeSwIn8/kYrqkbN5MAXpliRZtBftL/UlkVAlLj72/fNclfwSUS8p9DH5XpeZpvVru/UblBoJRguqL+HSDEtCIMhTNPLSamst7GEHMcIt1v9ds1+x45E4s3N8U5fI="
          local_dir: cd_upload
          # only deploy from master branch
          on: &2
            branch: master
          bucket: abrigham.com
        # deploy from s3 to our ec2 instance(s) using aws codedeploy
        - provider: codedeploy
          skip_cleanup: true
          access_key_id: AKIAJHWIY4TFZ7L3UVRQ
          secret_access_key: *1
          bucket: abrigham.com
          key: latest.zip
          bundle_type: zip
          application: abrigham
          deployment_group: Production
          on: *2
language: php
php: 7.2
env: TRAVIS_NODE_VERSION="7.9.0"
# install anaconda, since feature tests are being run it is required
install:
  - ./after.sh
  - rm -rf ~/.nvm && git clone https://github.com/creationix/nvm.git ~/.nvm && (cd ~/.nvm && git checkout `git describe --abbrev=0 --tags`) && source ~/.nvm/nvm.sh && nvm install $TRAVIS_NODE_VERSION
# set up our testing environment
before_script:
  - cp .env.travis .env
  - composer self-update
  - composer install --prefer-source --no-interaction --quiet
  - php artisan key:generate
  - npm install --quiet
  - npm run prod
# run the tests and phpcs
script:
  - vendor/bin/phpunit;
  - vendor/bin/phpcs --standard=psr2 ./app/Http;
# no emails please
notifications:
  email: false
jobs:
  include:
    - stage: Test
    # using travis build stages, deploy will only run if all jobs in the test stage have passed
    - stage: Deploy
      php: 7.2
      # we're using this to install a newer version of node and npm so we can compile our assets before we deploy them
      env: TRAVIS_NODE_VERSION="7.9.0"
      # install nvm so we can update our node/npm version
      install:
        - rm -rf ~/.nvm && git clone https://github.com/creationix/nvm.git ~/.nvm && (cd ~/.nvm && git checkout `git describe --abbrev=0 --tags`) && source ~/.nvm/nvm.sh && nvm install $TRAVIS_NODE_VERSION
      before_script: skip
      script: skip
      before_deploy:
        # install production vendors
        - composer install --no-dev --optimize-autoloader --no-interaction --quiet
        # install our node dependencies
        - npm install --quiet
        # run production assets
        - npm run prod
        # zip up our application in preparation for sending it to s3
        - zip -r latest *
        - mkdir -p cd_upload
        - mv latest.zip cd_upload/latest.zip
      deploy:
        # deploy to s3
        - provider: s3
          skip_cleanup: true
          access_key_id: AKIAJUBHSOK262RJXOZQ
          secret_access_key: &1
            secure: TJHZ3im4N7Wt5vwb3wZYb1cOWX22Edw2Lz3bP7gPd6Awmee2Df5BrWWpQYRgUEFjbhD0GhK4ZiGUg4SiTrt7AgebxqHS/NVzgQK1mqK9A0jCHuQwvXEmFqp5mn2ZzGALFAqB06799/niIS/vVW3bWMbF4/z4MT/gL3FsQQZ80dQF9Pu7jKz6D+HRAfrez3v7agZkVT5AexJKdIAeJsYjwBAYWRoGc27IHNYr+1uP3r5XD5UxC5h4PVzHsLY59PTB7cYbJw5acszYloo4PwYvIuM6w3w0AN++e19SmVPfH1FgfHOkKUcez/Np64Hky1z8cCdYiRFSh1XKsiQojTShBC4hzwGBDSysFB8ip7kxKWdNtxC2NHWXxD0IUpJWqxCM1DnuITNRXvp09L23oiAKRenSYP1tnVP563xAIqp4FOhSsuINNmMcqHzK0OpgivVF5ton/EJGMnCQ/0Sqt7+9hzmofqXtXMwytErN9BJ5GmIClLWnPSwb3NEL6L+yDZw/lEnfkroizOjQSWca1Mw208r9ZWwHEAso2qaglwgjjxfkboYx6x1UVqPw0nZji0jHlYcUJMeSEZNVWQkEWrePFDsoWf03bjBKzDuePcWqzm1PXvYgAl+VFzrcKNdkt7aeRNagkxScc7b2B9OToVncei3BM72sewF3pMC2fCxpWW0=
          local_dir: cd_upload
          # only deploy from master branch
          on: &2
            branch: master
          bucket: abrigham.com
        # deploy from s3 to our ec2 instance(s) using aws codedeploy
        - provider: codedeploy
          skip_cleanup: true
          access_key_id: AKIAJUBHSOK262RJXOZQ
          secret_access_key: *1
          bucket: abrigham.com
          key: latest.zip
          bundle_type: zip
          application: abrigham
          deployment_group: Production
          on: *2